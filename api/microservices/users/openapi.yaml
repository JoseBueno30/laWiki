openapi: 3.0.0
info:
  description: Microservice that manages authentication and user info related endpoints
  title: UsersAPI
  version: 1.0.0
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/ADRIANTORREMOCHA_1/UsersAPI/1.0.0
paths:
  /v1/verify_token:
    post:
      description: Returns user info from the user oatuh token
      operationId: post-verify_token
      parameters:
      - description: Google OAuth user authentication token
        explode: true
        in: query
        name: auth_token
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyResponse'
          description: "OK, valid token"
        "400":
          description: "Bad Request, invalid token"
      summary: Verify user token
      tags:
      - v1/public
  /v1/users/{user_id}:
    get:
      description: Retrieves user info by the unique account email
      operationId: get-user-info
      parameters:
      - description: User unique id
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: email
          type: string
        style: simple
      - description: Client's authenticated email
        explode: false
        in: header
        name: user_email
        required: true
        schema:
          format: email
          type: string
        style: simple
      - description: "True if user is an admin user, False otherwise"
        explode: false
        in: header
        name: admin
        required: true
        schema:
          type: boolean
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: OK
        "401":
          description: "Unauthorized, invalid token or no token provided"
        "404":
          description: User not found
      summary: Get user info
      tags:
      - v1/public
    head:
      description: Checks wheter the user email is registered in the application
      operationId: head-users-user_email
      parameters:
      - description: User unique id
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: email
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
      summary: Check user
      tags:
      - v1/internal
    put:
      description: Updates user account info
      operationId: put-users-user_email
      parameters:
      - description: User unique id
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          format: email
          type: string
        style: simple
      - description: Client's authenticated email
        explode: false
        in: header
        name: user_email
        required: true
        schema:
          format: email
          type: string
        style: simple
      - description: "True if user is an admin user, False otherwise"
        explode: false
        in: header
        name: admin
        required: true
        schema:
          type: boolean
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUserInfo'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'
          description: OK
        "401":
          description: User unauthorized for this operation
        "404":
          description: User not found
      summary: Update user info
      tags:
      - v1/public
  /v1/users/{user_id}/rating:
    put:
      description: Update the given user's rating
      operationId: put-v1-users-user_email-rating
      parameters:
      - description: Unique user id
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewRating'
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
      summary: Update user rating
      tags:
      - v1/internal
  /v1/users/{user_id}/image:
    put:
      description: Update the given user's profile picture
      operationId: put-users-user_id-image
      parameters:
      - description: The unique user ID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: Client's authenticated email
        explode: false
        in: header
        name: user_email
        required: true
        schema:
          format: email
          type: string
        style: simple
      - description: "True if user is an admin user, False otherwise"
        explode: false
        in: header
        name: admin
        required: true
        schema:
          type: boolean
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              format: uri
              type: string
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      summary: Update user image
      tags:
      - v1/public
  /v1/users/{user_id}/username:
    put:
      description: Update the given user's username
      operationId: put-users-user_id-username
      parameters:
      - description: The unique user ID
        explode: false
        in: path
        name: user_id
        required: true
        schema:
          type: string
        style: simple
      - description: Client's authenticated email
        explode: false
        in: header
        name: user_email
        required: true
        schema:
          format: email
          type: string
        style: simple
      - description: "True if user is an admin user, False otherwise"
        explode: false
        in: header
        name: admin
        required: true
        schema:
          type: boolean
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      summary: Update user username
      tags:
      - v1/public
components:
  schemas:
    VerifyResponse:
      description: Info obtained retrieved by the oath token
      example:
        iat_date: 0
        user_info:
          image: https://openapi-generator.tech
          rating: 1.4658129
          admin: true
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          email: email
          username: username
        exp_date: 6
        auth_token: auth_token
      properties:
        auth_token:
          title: auth_token
          type: string
        iat_date:
          description: '"Issued at Time" in Epoch format'
          format: int64
          title: iat_date
          type: integer
          x-stoplight:
            id: ia0ekjj8q67mr
        exp_date:
          description: '"Expiration date" in Epoch format'
          format: int64
          title: exp_date
          type: integer
          x-stoplight:
            id: 1d2fs5uy6gz7l
        user_info:
          $ref: '#/components/schemas/UserInfo'
      required:
      - auth_token
      - exp_date
      - iat_date
      - user_info
      title: VerifyResponse
      type: object
    NewUserInfo:
      description: Model used to update an existing user information
      example:
        image: https://openapi-generator.tech
        username: username
      properties:
        username:
          title: username
          type: string
        image:
          format: uri
          title: image
          type: string
          x-stoplight:
            id: ptmzghhypmriv
      required:
      - image
      - username
      title: NewUserInfo
      type: object
    UserInfo:
      description: User account info
      example:
        image: https://openapi-generator.tech
        rating: 1.4658129
        admin: true
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        email: email
        username: username
      properties:
        id:
          format: uuid
          title: id
          type: string
          x-stoplight:
            id: e1vqsebcaho7l
        email:
          format: email
          title: email
          type: string
        username:
          title: username
          type: string
          x-stoplight:
            id: sh3aj3mio7e8l
        image:
          format: uri
          title: image
          type: string
          x-stoplight:
            id: 0jftg3etfaj30
        rating:
          format: float
          title: rating
          type: number
          x-stoplight:
            id: a2nfvlfpcj6h4
        admin:
          description: "True if it is an admin user, False otherwise"
          title: admin
          type: boolean
          x-stoplight:
            id: lsmdrl1l781vi
      required:
      - admin
      - email
      - id
      - image
      - rating
      - username
      title: User Info
      type: object
    NewRating:
      description: ""
      example:
        rating: 0.8008282
      properties:
        rating:
          format: float
          title: rating
          type: number
      required:
      - rating
      title: NewRating
      type: object
  securitySchemes: {}
