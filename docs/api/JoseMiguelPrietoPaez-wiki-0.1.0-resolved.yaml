openapi: 3.0.0
info:
  title: laWiki Wiki Microservice API
  description: This API is used to perform operations on the wikis of laWiki
  version: 0.1.0
servers:
- url: https://virtserver.swaggerhub.com/JoseMiguelPrietoPaez/wiki/0.1.0
  description: SwaggerHub API Auto Mocking
paths:
  /wikis:
    description: Search for wikis using the below query parameters.
    get:
      summary: Search for wikis.
      operationId: searchWikis
      parameters:
      - name: name
        in: query
        description: String to be searched within the wiki's name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: Maximum amount of results to be returned.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          example: 20
          default: 20
      - name: offset
        in: query
        description: The index of the first result to return. Use with limit to get the next page of search results.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 10
          default: 0
      responses:
        "200":
          description: Succesful operation.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Wiki_search'
        "4XX":
          description: Bad Request.
        "418":
          description: "The server refused to brew coffee. <br/> *Yes, this is a joke. Yes, this is a reserved HTTP response code since 1998.* <br/> *See [RFC 2324](https://datatracker.ietf.org/doc/html/rfc2324) for more information. Actually, do not.*"
    post:
      summary: Create new wiki.
      operationId: postNewWikis
      parameters:
      - name: name
        in: query
        description: String to be searched within the wiki's name.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: Maximum amount of results to be returned.
        required: false
        style: form
        explode: true
        schema:
          maximum: 100
          minimum: 1
          type: integer
          example: 20
          default: 20
      - name: offset
        in: query
        description: The index of the first result to return. Use with limit to get the next page of search results.
        required: false
        style: form
        explode: true
        schema:
          minimum: 0
          type: integer
          example: 10
          default: 0
      requestBody:
        $ref: '#/components/requestBodies/Wiki_Post'
      responses:
        "201":
          description: Created succesfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wiki'
        "4XX":
          description: Bad Request.
  /wikis/{id}:
    get:
      summary: Get wiki with the matching identifier. May be its name or its ID.
      operationId: getOneWikiByIdentifier
      parameters:
      - name: id
        in: path
        description: "Identifier of the requested wiki, may be its name or its ID. Keep in mind wiki names may be modified."
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Wiki_identifier_type'
      responses:
        "200":
          description: Succesful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wiki'
        "4XX":
          description: Bad Request.
        "404":
          description: Bad Request. Wiki not found.
    put:
      summary: Update wiki with the matching identifier. May be its name or its ID.
      operationId: putOneWikiByIdentifier
      parameters:
      - name: id
        in: path
        description: "Identifier of the requested wiki, may be its name or its ID. Keep in mind wiki names may be modified."
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Wiki_identifier_type'
      responses:
        "200":
          description: Succesful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wiki'
        "4XX":
          description: Bad Request.
        "403":
          description: Forbidden. User is not authorized to edit wiki the requested wiki.
        "404":
          description: Bad Request. Wiki not found.
    delete:
      summary: Remove the specified wiki.
      operationId: removeWikiByIdentifier
      parameters:
      - name: id
        in: path
        description: "Identifier of the requested wiki, may be its name or its ID. Keep in mind wiki names may be modified."
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Wiki_identifier_type'
      responses:
        "200":
          description: Removed successfully. Returned deleted item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wiki'
        "400":
          description: Bad Request.
        "403":
          description: Forbidden. User is not authorized to delete wikis.
        "404":
          description: Wiki not found.
  /wikis/{name}:
    get:
      summary: Get wiki with the matching identifier. May be its name or its ID.
      operationId: getOneWikiByName
      parameters:
      - name: name
        in: path
        description: "Identifier of the requested wiki, may be its name or its ID. Keep in mind wiki names may be modified."
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Wiki_identifier_type'
      responses:
        "200":
          description: Succesful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wiki'
        "4XX":
          description: Bad Request.
        "404":
          description: Bad Request. Wiki not found.
    put:
      summary: Update wiki with the matching identifier. May be its name or its ID.
      operationId: putOneWikiByName
      parameters:
      - name: name
        in: path
        description: "Identifier of the requested wiki, may be its name or its ID. Keep in mind wiki names may be modified."
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Wiki_identifier_type'
      responses:
        "200":
          description: Succesful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wiki'
        "4XX":
          description: Bad Request.
        "403":
          description: Forbidden. User is not authorized to edit wiki the requested wiki.
        "404":
          description: Bad Request. Wiki not found.
    delete:
      summary: Remove the specified wiki.
      operationId: removeWikiByName
      parameters:
      - name: name
        in: path
        description: "Identifier of the requested wiki, may be its name or its ID. Keep in mind wiki names may be modified."
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Wiki_identifier_type'
      responses:
        "200":
          description: Removed successfully. Returned deleted item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wiki'
        "400":
          description: Bad Request.
        "403":
          description: Forbidden. User is not authorized to delete wikis.
        "404":
          description: Wiki not found.
components:
  schemas:
    Wiki_unsaved:
      type: object
      properties:
        name:
          type: string
          description: Name of the wiki.
        description:
          type: string
          description: Details of the wiki set by its editors.
        author:
          type: string
          description: Creator of the wiki. Should not remain a string.
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag_unsaved'
    Wiki:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the wiki.
        name:
          type: string
          description: Name of the wiki.
        description:
          type: string
          description: Details of the wiki set by its editors.
        author:
          $ref: '#/components/schemas/User'
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
      example:
        id: "1"
        name: Example wiki
        description: This is an example of a response when getting a wiki
        author: "Someone, change when user return is finalized"
        tags:
        - id: "1"
          name: Gift cards
          wiki_id: "1"
        - id: "2"
          name: Stores
          wiki_id: "1"
    Wiki_search:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the wiki.
        name:
          type: string
          description: Name of the wiki.
        description:
          type: string
          description: Details of the wiki set by its editors.
        author:
          $ref: '#/components/schemas/User'
      example:
        id: "1"
        name: Example wiki
        description: This is an example of a response when getting a wiki
        author: "Someone, change when user return is finalized"
    Tag:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the tag.
        name:
          type: string
          description: Name of the tag.
        wiki_id:
          type: string
          description: Unique identifier for the wiki that uses the tag.
      example:
      - id: "1"
        name: Gift cards
        wiki_id: "1"
      - id: "2"
        name: Stores
        wiki_id: "1"
      - id: "1"
        name: Sports cars
        wiki_id: "2"
    Tag_unsaved:
      type: object
      properties:
        name:
          type: string
          description: Name of the tag.
      example:
      - name: Gift cards
      - name: Cars
      - name: Skills
      - name: Stances
    User:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the user.
        name:
          type: string
          description: Name of the user.
      description: "Schema for the user, temporary as we do not know how the user will be modelled."
    Wiki_identifier_type:
      oneOf:
      - type: integer
      - type: string
  requestBodies:
    Wiki_Post:
      description: Body of a post request to upload a new wiki.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Wiki_unsaved'
      required: true
