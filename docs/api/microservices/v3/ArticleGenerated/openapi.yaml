openapi: 3.0.0
info:
  contact:
    name: ""
  description: "The Articles API provides endpoints for managing and retrieving articles\
    \ and article versions within the wiki application. It supports core CRUD (Create,\
    \ Read, Update, Delete) operations, search functionality, and versioning."
  license:
    name: ""
  title: ArticlesAPI
  version: "3.0"
servers:
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/JABR3830/ArticlesAPI/1.0
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/JABR3830/ArticleAPI/1.0
paths:
  /v1/articles/{id}:
    delete:
      description: Delete an Article identified by it's unique ID
      operationId: deleteArticleByIDV1
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Article successfully deleted.
        "400":
          description: "Bad Request, invalid Article ID format. "
        "403":
          description: Forbidden
        "404":
          description: Article Not Found
      summary: Delete Article
      tags:
      - v1/editors
    get:
      description: Get an ArticleVersion identified by it's unique ID
      operationId: getArticleByIdV1
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    wiki_id: 9a3179cd-aa83-4a5b-a08a-5c794d4020a8
                    title: string
                    creation_date: 2019-08-24T14:15:22Z
                    author:
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      name: string
                    tags:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      tag: string
                    versions:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      title: string
                      author:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        name: string
                      modification_date: 2019-08-24T14:15:22Z
                    rating: 0
              schema:
                $ref: '#/components/schemas/ArticleV1'
          description: OK
        "400":
          description: "Bad Request, invalid Article ID format. "
        "404":
          description: Article Not Found
      summary: Get Article
      tags:
      - v1/public
    head:
      description: 'Check if an Article exits given its unique ID. '
      operationId: checkArticleByIDV1
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          description: "Bad Request, invalid Article ID"
        "404":
          description: Article Not Found
      summary: Check Article
      tags:
      - v1/internal
      x-internal: false
  /v1/articles/versions/by-name/{name}:
    get:
      description: Get the most recent ArticleVersion the Article with the given name
        from the specified Wiki.
      operationId: getArticleByNameV1
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the wiki of the Article
        explode: true
        in: query
        name: wiki
        required: true
        schema:
          format: uuid
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    article_id: e4aad634-3311-4e79-b165-3911549b3b29
                    author:
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      name: string
                    title: string
                    modification_date: 2019-08-24T14:15:22Z
                    body: string
                    tags:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      tag: string
              schema:
                $ref: '#/components/schemas/ArticleVersionV1'
          description: OK
        "400":
          description: "Bad Request, invalid Article name format. "
        "404":
          description: Article Not Found
      summary: Get ArticleVersion by name
      tags:
      - v1/public
  /v1/articles:
    get:
      description: "Get a list of Articles from a given Wiki that match a keyword\
        \ string. Results can by filtered by tags, sorted by different parameters\
        \ and support pagination."
      operationId: searchArticlesV1
      parameters:
      - description: The ID of the wiki where the serch will be made
        explode: true
        in: query
        name: wiki_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Search query for the name of the article
        explode: true
        in: query
        name: name
        required: false
        schema:
          example: name
          type: string
        style: form
      - description: A comma-separated list of tag IDs to search for
        explode: false
        in: query
        name: tags
        required: false
        schema:
          example:
          - tag1
          - tag2
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: The index of the first result to return. Use with limit to get
          the next page of search results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          example: 10
          minimum: 0
          type: integer
        style: form
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          example: 20
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: Sorts the articles by different criteria
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: none
          example: "recent, oldest, popular, unpopular"
          type: string
        style: form
      - description: Single date or range
        explode: true
        in: query
        name: creation_date
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filter for the author of the Article
        explode: true
        in: query
        name: author_name
        required: false
        schema:
          type: string
        style: form
      - description: Filter for the editors of the Article
        explode: true
        in: query
        name: editor_name
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    articles:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      wiki_id: 9a3179cd-aa83-4a5b-a08a-5c794d4020a8
                      title: string
                      creation_date: 2019-08-24T14:15:22Z
                      author:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        name: string
                      tags:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        tag: string
                      versions:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        title: string
                        author:
                          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                          name: string
                        modification_date: 2019-08-24T14:15:22Z
                      rating: 0
                    total: 0
                    offset: 0
                    limit: 0
                    previous: http://example.com
                    next: http://example.com
              schema:
                $ref: '#/components/schemas/ArticleListV1'
          description: OK
        "400":
          content: {}
          description: "Bad Request, invalid input paramaters"
        "404":
          description: Article Not Found
      summary: Search for Articles
      tags:
      - v1/public
    post:
      description: Create a new Article in a given wiki
      operationId: createArticleV1
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  title: string
                  author:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    name: string
                  tags:
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    tag: string
                  body: string
                  wiki_id: string
            schema:
              $ref: '#/components/schemas/NewArticleV1'
      responses:
        "201":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    wiki_id: 9a3179cd-aa83-4a5b-a08a-5c794d4020a8
                    title: string
                    creation_date: 2019-08-24T14:15:22Z
                    author:
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      name: string
                    tags:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      tag: string
                    versions:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      title: string
                      author:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        name: string
                      modification_date: 2019-08-24T14:15:22Z
                    rating: 0
              schema:
                $ref: '#/components/schemas/ArticleV1'
          description: Created
        "400":
          description: "Bad Request, invalid paramaters"
        "403":
          description: Forbidden
      summary: Create Article
      tags:
      - v1/editors
  /v1/articles/versions/{id}:
    delete:
      description: Delete an ArticleVersion identified by it's unique ID
      operationId: deleteArticleVersionByIdV1
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ArticleVersion successfully deleted.
        "400":
          description: "Bad Request, invalid ArticleVersion ID format. "
        "403":
          description: Forbidden
        "404":
          description: ArticleVersion Not Found
      summary: Delete ArticleVersion
      tags:
      - v1/editors
    get:
      description: Get an ArticleVersion identified by it's unique ID
      operationId: getArticleVersionByIdV1
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    article_id: e4aad634-3311-4e79-b165-3911549b3b29
                    author:
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      name: string
                    title: string
                    modification_date: 2019-08-24T14:15:22Z
                    body: string
                    tags:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      tag: string
              schema:
                $ref: '#/components/schemas/ArticleVersionV1'
          description: OK
        "400":
          description: "Bad Request, invalid ArticleVersion ID format. "
        "404":
          description: Article Version Not Found
      summary: Get ArticleVersion
      tags:
      - v1/public
  /v1/articles/{id}/versions:
    get:
      description: Get a list of ArticleVersions of a given Article. Results can be
        sorted by creation date and support pagination.
      operationId: getArticleVersionListByArticleIDV1
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The index of the first result to return. Use with limit to get
          the next page of search results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          example: 10
          type: integer
        style: form
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          example: 50
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: Sorts the articles by different criteria
        explode: true
        in: query
        name: order
        required: false
        schema:
          example: "recent, oldest"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    article_versions:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      title: string
                      author:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        name: string
                      modification_date: 2019-08-24T14:15:22Z
                    total: 0
                    offset: 0
                    limit: 0
                    previous: http://example.com
                    next: http://example.com
              schema:
                $ref: '#/components/schemas/ArticleVersionListV1'
          description: OK
        "400":
          description: "Bad Request, invalid input paramaters"
        "404":
          description: Article not Found
      summary: Get Article's ArticleVersions
      tags:
      - v1/public
    post:
      description: Create an ArticleVersion for a given Article and adds it to the
        list of versions of the Article.
      operationId: createArticleVersionV1
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  article_id: e4aad634-3311-4e79-b165-3911549b3b29
                  title: string
                  author:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    name: string
                  tags:
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    tag: string
                  body: string
            schema:
              $ref: '#/components/schemas/NewArticleVersionV1'
      responses:
        "201":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    article_id: e4aad634-3311-4e79-b165-3911549b3b29
                    title: string
                    modification_date: 2019-08-24T14:15:22Z
                    body: string
                    editors:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      name: string
                      edition_date: 2019-08-24T14:15:22Z
                    tags:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      tag: string
              schema:
                $ref: '#/components/schemas/ArticleVersionV1'
          description: Version successfully created.
        "400":
          description: "Bad Request, Invalid Parameters"
        "403":
          description: Forbidden
      summary: Create ArticleVersion for an Article
      tags:
      - v1/editors
  /v1/articles/{article_id}/versions/{version_id}:
    put:
      description: Restore an older ArticleVersion of an Article.
      operationId: restoreArticleVersionV1
      parameters:
      - explode: false
        in: path
        name: article_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ArticleVersion successfully restored
        "400":
          description: invalid Article or ArticleVersion ID format
        "403":
          description: Forbidden
        "404":
          description: Article Version Not Found
      summary: Restore ArticleVersion
      tags:
      - v1/editors
  /v1/articles/commented_by/{id}:
    get:
      description: Get a list of the Articles commented by a given user.
      operationId: getArticlesCommentedByUserV1
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The index of the first result to return. Use with limit to get
          the next page of search results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: Sorts the articles by different criteria
        explode: true
        in: query
        name: order
        required: false
        schema:
          example: "recent, oldest"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    articles:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      wiki_id: 9a3179cd-aa83-4a5b-a08a-5c794d4020a8
                      title: string
                      creation_date: 2019-08-24T14:15:22Z
                      author:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        name: string
                      tags:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        tag: string
                      versions:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        title: string
                        author:
                          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                          name: string
                        modification_date: 2019-08-24T14:15:22Z
                      rating: 0
                    total: 0
                    offset: 0
                    limit: 0
                    previous: http://example.com
                    next: http://example.com
              schema:
                $ref: '#/components/schemas/ArticleListV1'
          description: OK
        "400":
          description: "Bad Request, inavalid User ID format"
        "404":
          description: User Not Found
      summary: Get Articles commented by User
      tags:
      - v1/public
  /v1/articles/author/{id}:
    get:
      description: 'Get a list of Articles given an author''s ID.  '
      operationId: GetArticleByAuthorV1
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The index of the first result to return. Use with limit to get
          the next page of search results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 0
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: Sorts the articles by different criteria
        explode: true
        in: query
        name: order
        required: false
        schema:
          example: "recent, oldest"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    articles:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      wiki_id: 9a3179cd-aa83-4a5b-a08a-5c794d4020a8
                      title: string
                      creation_date: 2019-08-24T14:15:22Z
                      author:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        name: string
                      tags:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        tag: string
                      versions:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        title: string
                        author:
                          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                          name: string
                        modification_date: 2019-08-24T14:15:22Z
                      rating: 0
                    total: 0
                    offset: 0
                    limit: 0
                    previous: http://example.com
                    next: http://example.com
              schema:
                $ref: '#/components/schemas/ArticleListV1'
          description: OK
        "400":
          description: "Bad Request, The given ID was not correct."
        "404":
          description: Author Not Found.
      summary: Get Articles by Author
      tags:
      - v1/public
  /v1/articles/{id}/ratings:
    put:
      description: Update the rating of an Article give its unique ID and a rating
      operationId: updateRatingV1
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  raitng: 4.5
            schema:
              $ref: '#/components/schemas/id_ratings_bodyV1'
      responses:
        "204":
          description: "No Content, rating updated"
        "400":
          description: "Bad Request, invalid parameter format"
        "401":
          description: Unauthorized
        "404":
          description: Article Not Found
      summary: Update Rating
      tags:
      - v1/internal
      x-internal: false
  /v1/articles/{id}/tags:
    delete:
      description: "Unassigns a list of tags, given their IDs to an article."
      operationId: unassignArticleTagsV1
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: List of Tag IDs
        explode: false
        in: query
        name: ids
        required: true
        schema:
          example:
          - tag1
          - tag2
          items:
            type: string
          maxItems: 50
          type: array
          uniqueItems: true
        style: form
      responses:
        "204":
          description: "No Content, tags unassigned"
        "400":
          description: "Bad Request, invalid parameters format"
        "403":
          description: Forbidden
        "404":
          description: Article Not Found
      summary: Unassign Tags
      tags:
      - v1/internal
      x-internal: false
    put:
      description: "Assigns a list of tags, given their IDs, to an article"
      operationId: assignArticleTagsV1
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  tag_ids:
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    tag: string
            schema:
              $ref: '#/components/schemas/id_tags_bodyV1'
      responses:
        "204":
          description: "No Content, tags assigned"
        "400":
          description: "Bad Request, invalid parameters format"
        "403":
          description: Forbidden
        "404":
          description: Artcile Not Found
      summary: Assign Tags
      tags:
      - v1/internal
      x-internal: false
  /v2/articles/{id}:
    delete:
      description: Delete an Article identified by it's unique ID
      operationId: deleteArticleByIDV2
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Article successfully deleted.
        "400":
          description: "Bad Request, invalid Article ID format. "
        "403":
          description: Forbidden
        "404":
          description: Article Not Found
      summary: Delete Article
      tags:
      - v2/editors
    get:
      description: Get an Article identified by it's unique ID
      operationId: getArticleByIdV2
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/ArticleV2'
          description: OK
        "400":
          description: "Bad Request, invalid Article ID format. "
        "404":
          description: Article Not Found
      summary: Get Article
      tags:
      - v2/public
    head:
      description: 'Check if an Article exits given its unique ID. '
      operationId: checkArticleByIDV2
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          description: "Bad Request, invalid Article ID"
        "404":
          description: Article Not Found
      summary: Check Article
      tags:
      - v2/internal
      x-internal: false
  /v2/articles/versions/by-name/{name}:
    get:
      description: Get the most recent ArticleVersion the Article with the given name
        from the specified Wiki.
      operationId: getArticleByNameV2
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the wiki of the Article
        explode: true
        in: query
        name: wiki
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: "Language of the ArticleVersion, any language if not specified"
        explode: true
        in: query
        name: lan
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    article_id: e4aad634-3311-4e79-b165-3911549b3b29
                    author:
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      name: string
                      image: http://example.com
                    title:
                      property1: string
                      property2: string
                    modification_date: 2019-08-24T14:15:22Z
                    body: string
                    tags:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      tag:
                        property1: string
                        property2: string
                    lan: string
              schema:
                $ref: '#/components/schemas/ArticleVersionV2'
          description: OK
        "400":
          description: "Bad Request, invalid Article name format. "
        "404":
          description: Article Not Found
      summary: Get ArticleVersion by name
      tags:
      - v2/public
  /v2/articles:
    get:
      description: "Get a list of Articles from a given Wiki that match a keyword\
        \ string. Results can by filtered by tags, sorted by different parameters\
        \ and support pagination."
      operationId: searchArticlesV2
      parameters:
      - description: The ID of the wiki where the serch will be made
        explode: true
        in: query
        name: wiki_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Search query for the name of the article
        explode: true
        in: query
        name: name
        required: false
        schema:
          example: name
          type: string
        style: form
      - description: A comma-separated list of tag IDs to search for
        explode: false
        in: query
        name: tags
        required: false
        schema:
          example:
          - tag1
          - tag2
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: The index of the first result to return. Use with limit to get
          the next page of search results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          example: 10
          minimum: 0
          type: integer
        style: form
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          example: 20
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: Sorts the articles by different criteria
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: none
          example: "recent, oldest, popular, unpopular"
          type: string
        style: form
      - description: Single date or range
        explode: true
        in: query
        name: creation_date
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filter for the author of the Article
        explode: true
        in: query
        name: author_name
        required: false
        schema:
          type: string
        style: form
      - description: Filter for the editors of the Article
        explode: true
        in: query
        name: editor_name
        required: false
        schema:
          type: string
        style: form
      - description: "Language of the ArticleVersion, original language if not specified"
        explode: true
        in: query
        name: lan
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    articles:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      wiki_id: 9a3179cd-aa83-4a5b-a08a-5c794d4020a8
                      title:
                        property1: string
                        property2: string
                      creation_date: 2019-08-24T14:15:22Z
                      author:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        name: string
                        image: http://example.com
                      tags:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        tag:
                          property1: string
                          property2: string
                      versions:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        title:
                          property1: string
                          property2: string
                        author:
                          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                          name: string
                          image: http://example.com
                        modification_date: 2019-08-24T14:15:22Z
                        lan: string
                      rating: 0
                      lan: string
                    total: 0
                    offset: 0
                    limit: 0
                    previous: http://example.com
                    next: http://example.com
              schema:
                $ref: '#/components/schemas/ArticleListV2'
          description: OK
        "400":
          content: {}
          description: "Bad Request, invalid input paramaters"
        "404":
          description: Article Not Found
      summary: Search for Articles
      tags:
      - v2/public
    post:
      description: Create a new Article in a given wiki
      operationId: createArticleV2
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  title: string
                  author:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    name: string
                    image: http://example.com
                  tags:
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    tag:
                      property1: string
                      property2: string
                  body: string
                  wiki_id: string
                  lan: string
                  trasnlate_title: true
            schema:
              $ref: '#/components/schemas/NewArticleV2'
      responses:
        "201":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    wiki_id: 9a3179cd-aa83-4a5b-a08a-5c794d4020a8
                    title: string
                    creation_date: 2019-08-24T14:15:22Z
                    author:
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      name: string
                    tags:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      tag: string
                    versions:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      title: string
                      author:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        name: string
                      modification_date: 2019-08-24T14:15:22Z
                    rating: 0
              schema:
                $ref: '#/components/schemas/ArticleV2'
          description: Created
        "400":
          description: "Bad Request, invalid paramaters"
        "403":
          description: Forbidden
      summary: Create Article
      tags:
      - v2/editors
  /v2/articles/versions/{id}:
    delete:
      description: Delete an ArticleVersion identified by it's unique ID
      operationId: deleteArticleVersionByIdV2
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ArticleVersion successfully deleted.
        "400":
          description: "Bad Request, invalid ArticleVersion ID format. "
        "403":
          description: Forbidden
        "404":
          description: ArticleVersion Not Found
      summary: Delete ArticleVersion
      tags:
      - v2/editors
    get:
      description: Get an ArticleVersion identified by it's unique ID
      operationId: getArticleVersionByIdV2
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Language of the ArticleVersion, original language if not specified"
        explode: true
        in: query
        name: lan
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    article_id: e4aad634-3311-4e79-b165-3911549b3b29
                    author:
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      name: string
                      image: http://example.com
                    title:
                      property1: string
                      property2: string
                    modification_date: 2019-08-24T14:15:22Z
                    body: string
                    tags:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      tag:
                        property1: string
                        property2: string
                    lan: string
              schema:
                $ref: '#/components/schemas/ArticleVersionV2'
          description: OK
        "400":
          description: "Bad Request, invalid ArticleVersion ID format. "
        "404":
          description: Article Version Not Found
      summary: Get ArticleVersion
      tags:
      - v2/public
  /v2/articles/{id}/versions:
    get:
      description: Get a list of ArticleVersions of a given Article. Results can be
        sorted by creation date adn support pagination.
      operationId: getArticleVersionListByArticleIDV2
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The index of the first result to return. Use with limit to get
          the next page of search results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          example: 10
          type: integer
        style: form
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          example: 50
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: Sorts the articles by different criteria
        explode: true
        in: query
        name: order
        required: false
        schema:
          example: "recent, oldest"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    article_versions:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      title:
                        property1: string
                        property2: string
                      author:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        name: string
                        image: http://example.com
                      modification_date: 2019-08-24T14:15:22Z
                      lan: string
                    total: 0
                    offset: 0
                    limit: 0
                    previous: http://example.com
                    next: http://example.com
              schema:
                $ref: '#/components/schemas/ArticleVersionListV2'
          description: OK
        "400":
          description: "Bad Request, invalid input paramaters"
        "404":
          description: Article not Found
      summary: Get Article's ArticleVersions
      tags:
      - v2/public
    post:
      description: Create an ArticleVersion for a given Article and adds it to the
        list of versions of the Article.
      operationId: createArticleVersionV2
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  title: string
                  author:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    name: string
                    image: http://example.com
                  tags:
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    tag:
                      property1: string
                      property2: string
                  body: string
                  lan: string
                  translate_title: true
            schema:
              $ref: '#/components/schemas/NewArticleVersionV2'
      responses:
        "201":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    article_id: e4aad634-3311-4e79-b165-3911549b3b29
                    title: string
                    modification_date: 2019-08-24T14:15:22Z
                    body: string
                    editors:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      name: string
                      edition_date: 2019-08-24T14:15:22Z
                    tags:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      tag: string
              schema:
                $ref: '#/components/schemas/ArticleVersionV2'
          description: Version successfully created.
        "400":
          description: "Bad Request, Invalid Parameters"
        "403":
          description: Forbidden
      summary: Create ArticleVersion for an Article
      tags:
      - v2/editors
  /v2/articles/{article_id}/versions/{version_id}:
    put:
      description: Restore an older ArticleVersion of an Article.
      operationId: restoreArticleVersionV2
      parameters:
      - explode: false
        in: path
        name: article_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: ArticleVersion successfully restored
        "400":
          description: invalid Article or ArticleVersion ID format
        "403":
          description: Forbidden
        "404":
          description: Article Version Not Found
      summary: Restore ArticleVersion
      tags:
      - v2/editors
  /v2/articles/commented_by/{id}:
    get:
      description: Get a list of the Articles commented by a given user.
      operationId: getArticlesCommentedByUserV2
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The index of the first result to return. Use with limit to get
          the next page of search results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: Sorts the articles by different criteria
        explode: true
        in: query
        name: order
        required: false
        schema:
          example: "recent, oldest"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    articles:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      wiki_id: 9a3179cd-aa83-4a5b-a08a-5c794d4020a8
                      title:
                        property1: string
                        property2: string
                      creation_date: 2019-08-24T14:15:22Z
                      author:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        name: string
                        image: http://example.com
                      tags:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        tag:
                          property1: string
                          property2: string
                      versions:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        title:
                          property1: string
                          property2: string
                        author:
                          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                          name: string
                          image: http://example.com
                        modification_date: 2019-08-24T14:15:22Z
                        lan: string
                      rating: 0
                      lan: string
                    total: 0
                    offset: 0
                    limit: 0
                    previous: http://example.com
                    next: http://example.com
              schema:
                $ref: '#/components/schemas/ArticleListV2'
          description: OK
        "400":
          description: "Bad Request, inavalid User ID format"
        "404":
          description: User Not Found
      summary: Get Articles commented by User
      tags:
      - v2/public
  /v2/articles/author/{id}:
    get:
      description: 'Get a list of Articles given an author''s ID.  '
      operationId: GetArticleByAuthorV2
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The index of the first result to return. Use with limit to get
          the next page of search results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: Sorts the articles by different criteria
        explode: true
        in: query
        name: order
        required: false
        schema:
          example: "recent, oldest"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    articles:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      wiki_id: 9a3179cd-aa83-4a5b-a08a-5c794d4020a8
                      title:
                        property1: string
                        property2: string
                      creation_date: 2019-08-24T14:15:22Z
                      author:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        name: string
                        image: http://example.com
                      tags:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        tag:
                          property1: string
                          property2: string
                      versions:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        title:
                          property1: string
                          property2: string
                        author:
                          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                          name: string
                          image: http://example.com
                        modification_date: 2019-08-24T14:15:22Z
                        lan: string
                      rating: 0
                      lan: string
                    total: 0
                    offset: 0
                    limit: 0
                    previous: http://example.com
                    next: http://example.com
              schema:
                $ref: '#/components/schemas/ArticleListV2'
          description: OK
        "400":
          description: "Bad Request, The given ID was not correct."
        "404":
          description: Author Not Found.
      summary: Get Articles by Author
      tags:
      - v2/public
  /v2/articles/{id}/ratings:
    put:
      description: Update the rating of an Article give its unique ID and a rating
      operationId: updateRatingV2
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  raitng: 4.5
            schema:
              $ref: '#/components/schemas/id_ratings_bodyV2'
      responses:
        "204":
          description: "No Content, rating updated"
        "400":
          description: "Bad Request, invalid parameter format"
        "401":
          description: Unauthorized
        "404":
          description: Article Not Found
      summary: Update Rating
      tags:
      - v2/internal
      x-internal: false
  /v2/articles/{id}/tags:
    delete:
      description: "Unassigns a list of tags, given their IDs to an article."
      operationId: unassignArticleTagsV2
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: List of Tag IDs
        explode: false
        in: query
        name: ids
        required: true
        schema:
          example:
          - tag1
          - tag2
          items:
            type: string
          maxItems: 50
          type: array
          uniqueItems: true
        style: form
      responses:
        "204":
          description: "No Content, tags unassigned"
        "400":
          description: "Bad Request, invalid parameters format"
        "403":
          description: Forbidden
        "404":
          description: Article Not Found
      summary: Unassign Tags
      tags:
      - v2/internal
      x-internal: false
    put:
      description: "Assigns a list of tags, given their IDs, to an article"
      operationId: assignArticleTagsV2
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  tag_ids:
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    tag: string
            schema:
              $ref: '#/components/schemas/id_tags_bodyV2'
      responses:
        "204":
          description: "No Content, tags assigned"
        "400":
          description: "Bad Request, invalid parameters format"
        "403":
          description: Forbidden
        "404":
          description: Artcile Not Found
      summary: Assign Tags
      tags:
      - v2/internal
      x-internal: false
  /v2/articles/versions/{id}/body:
    get:
      operationId: GetArticleVersionBodyByIDV2
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: It indicates if the body must be parsed.
        explode: true
        in: query
        name: parsed
        required: false
        schema:
          default: false
          example: false
          type: boolean
        style: form
      - description: "Language of the body, if parsed, original language if not specified"
        explode: true
        in: query
        name: lan
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    body: string
              schema:
                $ref: '#/components/schemas/inline_response_200_V2'
          description: OK. Parsed Succesfully.
        "404":
          description: ArticleVersion Not Found
      summary: Get ArticleVersion body
      tags:
      - v2/public
  /v2/articles/wiki/{id}:
    delete:
      operationId: DeleteArticlesFromWikiV2
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Articles Successfully Deleted
        "400":
          description: "Bad Request, invalid Wiki ID format. "
        "403":
          description: Forbidden
        "404":
          description: Articles Not Found
      summary: Delete Articles from Wiki
      tags:
      - v2/internal
      x-internal: false
  /v3/articles/{id}:
    delete:
      description: Delete an Article identified by it's unique ID
      operationId: deleteArticleByIDV3
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: user_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: admin
        required: true
        schema:
          type: boolean
        style: simple
      responses:
        "200":
          description: Article successfully deleted.
        "400":
          description: "Bad Request, invalid Article ID format. "
        "403":
          description: Forbidden
        "404":
          description: Article Not Found
      summary: Delete Article
      tags:
      - v3/editors
    get:
      description: Get an Article identified by it's unique ID
      operationId: getArticleByIdV3
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples: {}
              schema:
                $ref: '#/components/schemas/ArticleV2'
          description: OK
        "400":
          description: "Bad Request, invalid Article ID format. "
        "404":
          description: Article Not Found
      summary: Get Article
      tags:
      - v3/public
    head:
      description: 'Check if an Article exits given its unique ID. '
      operationId: checkArticleByIDV3
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: OK
        "400":
          description: "Bad Request, invalid Article ID"
        "404":
          description: Article Not Found
      summary: Check Article
      tags:
      - v3/internal
      x-internal: false
  /v3/articles/versions/by-name/{name}:
    get:
      description: Get the most recent ArticleVersion the Article with the given name
        from the specified Wiki.
      operationId: getArticleByNameV3
      parameters:
      - explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      - description: The ID of the wiki of the Article
        explode: true
        in: query
        name: wiki
        required: true
        schema:
          format: uuid
          type: string
        style: form
      - description: "Language of the ArticleVersion, any language if not specified"
        explode: true
        in: query
        name: lan
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    article_id: e4aad634-3311-4e79-b165-3911549b3b29
                    author:
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      name: string
                      image: http://example.com
                    title:
                      property1: string
                      property2: string
                    modification_date: 2019-08-24T14:15:22Z
                    body: string
                    tags:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      tag:
                        property1: string
                        property2: string
                    lan: string
              schema:
                $ref: '#/components/schemas/ArticleVersionV2'
          description: OK
        "400":
          description: "Bad Request, invalid Article name format. "
        "404":
          description: Article Not Found
      summary: Get ArticleVersion by name
      tags:
      - v3/public
  /v3/articles:
    get:
      description: "Get a list of Articles from a given Wiki that match a keyword\
        \ string. Results can by filtered by tags, sorted by different parameters\
        \ and support pagination."
      operationId: searchArticlesV3
      parameters:
      - description: The ID of the wiki where the serch will be made
        explode: true
        in: query
        name: wiki_id
        required: false
        schema:
          format: uuid
          type: string
        style: form
      - description: Search query for the name of the article
        explode: true
        in: query
        name: name
        required: false
        schema:
          example: name
          type: string
        style: form
      - description: A comma-separated list of tag IDs to search for
        explode: false
        in: query
        name: tags
        required: false
        schema:
          example:
          - tag1
          - tag2
          items:
            type: string
          type: array
          uniqueItems: true
        style: form
      - description: The index of the first result to return. Use with limit to get
          the next page of search results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          example: 10
          minimum: 0
          type: integer
        style: form
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          example: 20
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: Sorts the articles by different criteria
        explode: true
        in: query
        name: order
        required: false
        schema:
          default: none
          example: "recent, oldest, popular, unpopular"
          type: string
        style: form
      - description: Single date or range
        explode: true
        in: query
        name: creation_date
        required: false
        schema:
          format: date
          type: string
        style: form
      - description: Filter for the author of the Article
        explode: true
        in: query
        name: author_name
        required: false
        schema:
          type: string
        style: form
      - description: Filter for the editors of the Article
        explode: true
        in: query
        name: editor_name
        required: false
        schema:
          type: string
        style: form
      - description: "Language of the ArticleVersion, original language if not specified"
        explode: true
        in: query
        name: lan
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    articles:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      wiki_id: 9a3179cd-aa83-4a5b-a08a-5c794d4020a8
                      title:
                        property1: string
                        property2: string
                      creation_date: 2019-08-24T14:15:22Z
                      author:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        name: string
                        image: http://example.com
                      tags:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        tag:
                          property1: string
                          property2: string
                      versions:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        title:
                          property1: string
                          property2: string
                        author:
                          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                          name: string
                          image: http://example.com
                        modification_date: 2019-08-24T14:15:22Z
                        lan: string
                      rating: 0
                      lan: string
                    total: 0
                    offset: 0
                    limit: 0
                    previous: http://example.com
                    next: http://example.com
              schema:
                $ref: '#/components/schemas/ArticleListV2'
          description: OK
        "400":
          content: {}
          description: "Bad Request, invalid input paramaters"
        "404":
          description: Article Not Found
      summary: Search for Articles
      tags:
      - v3/public
    post:
      description: Create a new Article in a given wiki
      operationId: createArticleV3
      parameters:
      - explode: false
        in: header
        name: user_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: admin
        required: true
        schema:
          type: boolean
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  title: string
                  author:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    name: string
                    image: http://example.com
                  tags:
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    tag:
                      property1: string
                      property2: string
                  body: string
                  wiki_id: string
                  lan: string
                  trasnlate_title: true
            schema:
              $ref: '#/components/schemas/NewArticleV2'
      responses:
        "201":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    wiki_id: 9a3179cd-aa83-4a5b-a08a-5c794d4020a8
                    title: string
                    creation_date: 2019-08-24T14:15:22Z
                    author:
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      name: string
                    tags:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      tag: string
                    versions:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      title: string
                      author:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        name: string
                      modification_date: 2019-08-24T14:15:22Z
                    rating: 0
              schema:
                $ref: '#/components/schemas/ArticleV2'
          description: Created
        "400":
          description: "Bad Request, invalid paramaters"
        "403":
          description: Forbidden
      summary: Create Article
      tags:
      - v3/editors
  /v3/articles/versions/{id}:
    delete:
      description: Delete an ArticleVersion identified by it's unique ID
      operationId: deleteArticleVersionByIdV3
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: user_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: admin
        required: true
        schema:
          type: boolean
        style: simple
      responses:
        "200":
          description: ArticleVersion successfully deleted.
        "400":
          description: "Bad Request, invalid ArticleVersion ID format. "
        "403":
          description: Forbidden
        "404":
          description: ArticleVersion Not Found
      summary: Delete ArticleVersion
      tags:
      - v3/editors
    get:
      description: Get an ArticleVersion identified by it's unique ID
      operationId: getArticleVersionByIdV3
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: "Language of the ArticleVersion, original language if not specified"
        explode: true
        in: query
        name: lan
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    article_id: e4aad634-3311-4e79-b165-3911549b3b29
                    author:
                      id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      name: string
                      image: http://example.com
                    title:
                      property1: string
                      property2: string
                    modification_date: 2019-08-24T14:15:22Z
                    body: string
                    tags:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      tag:
                        property1: string
                        property2: string
                    lan: string
              schema:
                $ref: '#/components/schemas/ArticleVersionV2'
          description: OK
        "400":
          description: "Bad Request, invalid ArticleVersion ID format. "
        "404":
          description: Article Version Not Found
      summary: Get ArticleVersion
      tags:
      - v3/public
  /v3/articles/{id}/versions:
    get:
      description: Get a list of ArticleVersions of a given Article. Results can be
        sorted by creation date adn support pagination.
      operationId: getArticleVersionListByArticleIDV3
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The index of the first result to return. Use with limit to get
          the next page of search results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          example: 10
          type: integer
        style: form
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          example: 50
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: Sorts the articles by different criteria
        explode: true
        in: query
        name: order
        required: false
        schema:
          example: "recent, oldest"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    article_versions:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      title:
                        property1: string
                        property2: string
                      author:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        name: string
                        image: http://example.com
                      modification_date: 2019-08-24T14:15:22Z
                      lan: string
                    total: 0
                    offset: 0
                    limit: 0
                    previous: http://example.com
                    next: http://example.com
              schema:
                $ref: '#/components/schemas/ArticleVersionListV2'
          description: OK
        "400":
          description: "Bad Request, invalid input paramaters"
        "404":
          description: Article not Found
      summary: Get Article's ArticleVersions
      tags:
      - v3/public
    post:
      description: Create an ArticleVersion for a given Article and adds it to the
        list of versions of the Article.
      operationId: createArticleVersionV3
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: user_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: admin
        required: true
        schema:
          type: boolean
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  title: string
                  author:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    name: string
                    image: http://example.com
                  tags:
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    tag:
                      property1: string
                      property2: string
                  body: string
                  lan: string
                  translate_title: true
            schema:
              $ref: '#/components/schemas/NewArticleVersionV2'
      responses:
        "201":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    article_id: e4aad634-3311-4e79-b165-3911549b3b29
                    title: string
                    modification_date: 2019-08-24T14:15:22Z
                    body: string
                    editors:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      name: string
                      edition_date: 2019-08-24T14:15:22Z
                    tags:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      tag: string
              schema:
                $ref: '#/components/schemas/ArticleVersionV2'
          description: Version successfully created.
        "400":
          description: "Bad Request, Invalid Parameters"
        "403":
          description: Forbidden
      summary: Create ArticleVersion for an Article
      tags:
      - v3/editors
  /v3/articles/{article_id}/versions/{version_id}:
    put:
      description: Restore an older ArticleVersion of an Article.
      operationId: restoreArticleVersionV3
      parameters:
      - explode: false
        in: path
        name: article_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: version_id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: user_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: admin
        required: true
        schema:
          type: boolean
        style: simple
      responses:
        "200":
          description: ArticleVersion successfully restored
        "400":
          description: invalid Article or ArticleVersion ID format
        "403":
          description: Forbidden
        "404":
          description: Article Version Not Found
      summary: Restore ArticleVersion
      tags:
      - v3/editors
  /v3/articles/commented_by/{id}:
    get:
      description: Get a list of the Articles commented by a given user.
      operationId: getArticlesCommentedByUserV3
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The index of the first result to return. Use with limit to get
          the next page of search results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: Sorts the articles by different criteria
        explode: true
        in: query
        name: order
        required: false
        schema:
          example: "recent, oldest"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    articles:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      wiki_id: 9a3179cd-aa83-4a5b-a08a-5c794d4020a8
                      title:
                        property1: string
                        property2: string
                      creation_date: 2019-08-24T14:15:22Z
                      author:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        name: string
                        image: http://example.com
                      tags:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        tag:
                          property1: string
                          property2: string
                      versions:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        title:
                          property1: string
                          property2: string
                        author:
                          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                          name: string
                          image: http://example.com
                        modification_date: 2019-08-24T14:15:22Z
                        lan: string
                      rating: 0
                      lan: string
                    total: 0
                    offset: 0
                    limit: 0
                    previous: http://example.com
                    next: http://example.com
              schema:
                $ref: '#/components/schemas/ArticleListV2'
          description: OK
        "400":
          description: "Bad Request, inavalid User ID format"
        "404":
          description: User Not Found
      summary: Get Articles commented by User
      tags:
      - v3/public
  /v3/articles/author/{id}:
    get:
      description: 'Get a list of Articles given an author''s ID.  '
      operationId: GetArticleByAuthorV3
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The index of the first result to return. Use with limit to get
          the next page of search results.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: The maximum number of results to return.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          maximum: 100
          minimum: 0
          type: integer
        style: form
      - description: Sorts the articles by different criteria
        explode: true
        in: query
        name: order
        required: false
        schema:
          example: "recent, oldest"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    articles:
                    - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                      wiki_id: 9a3179cd-aa83-4a5b-a08a-5c794d4020a8
                      title:
                        property1: string
                        property2: string
                      creation_date: 2019-08-24T14:15:22Z
                      author:
                        id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        name: string
                        image: http://example.com
                      tags:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        tag:
                          property1: string
                          property2: string
                      versions:
                      - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                        title:
                          property1: string
                          property2: string
                        author:
                          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                          name: string
                          image: http://example.com
                        modification_date: 2019-08-24T14:15:22Z
                        lan: string
                      rating: 0
                      lan: string
                    total: 0
                    offset: 0
                    limit: 0
                    previous: http://example.com
                    next: http://example.com
              schema:
                $ref: '#/components/schemas/ArticleListV2'
          description: OK
        "400":
          description: "Bad Request, The given ID was not correct."
        "404":
          description: Author Not Found.
      summary: Get Articles by Author
      tags:
      - v3/public
  /v3/articles/{id}/ratings:
    put:
      description: Update the rating of an Article give its unique ID and a rating
      operationId: updateRatingV3
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: user_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: admin
        required: true
        schema:
          type: boolean
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  raitng: 4.5
            schema:
              $ref: '#/components/schemas/id_ratings_bodyV2'
      responses:
        "204":
          description: "No Content, rating updated"
        "400":
          description: "Bad Request, invalid parameter format"
        "401":
          description: Unauthorized
        "404":
          description: Article Not Found
      summary: Update Rating
      tags:
      - v3/internal
      x-internal: false
  /v3/articles/{id}/tags:
    delete:
      description: "Unassigns a list of tags, given their IDs to an article."
      operationId: unassignArticleTagsV3
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: List of Tag IDs
        explode: false
        in: query
        name: ids
        required: true
        schema:
          example:
          - tag1
          - tag2
          items:
            type: string
          maxItems: 50
          type: array
          uniqueItems: true
        style: form
      - explode: false
        in: header
        name: user_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: admin
        required: true
        schema:
          type: boolean
        style: simple
      responses:
        "204":
          description: "No Content, tags unassigned"
        "400":
          description: "Bad Request, invalid parameters format"
        "403":
          description: Forbidden
        "404":
          description: Article Not Found
      summary: Unassign Tags
      tags:
      - v3/internal
      x-internal: false
    put:
      description: "Assigns a list of tags, given their IDs, to an article"
      operationId: assignArticleTagsV3
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: user_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: admin
        required: true
        schema:
          type: boolean
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              Example 1:
                value:
                  tag_ids:
                  - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                    tag: string
            schema:
              $ref: '#/components/schemas/id_tags_bodyV2'
      responses:
        "204":
          description: "No Content, tags assigned"
        "400":
          description: "Bad Request, invalid parameters format"
        "403":
          description: Forbidden
        "404":
          description: Artcile Not Found
      summary: Assign Tags
      tags:
      - v3/internal
      x-internal: false
  /v3/articles/versions/{id}/body:
    get:
      operationId: GetArticleVersionBodyByIDV3
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: It indicates if the body must be parsed.
        explode: true
        in: query
        name: parsed
        required: false
        schema:
          default: false
          example: false
          type: boolean
        style: form
      - description: "Language of the body, if parsed, original language if not specified"
        explode: true
        in: query
        name: lan
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                Example 1:
                  value:
                    body: string
              schema:
                $ref: '#/components/schemas/inline_response_200_V2'
          description: OK. Parsed Succesfully.
        "404":
          description: ArticleVersion Not Found
      summary: Get ArticleVersion body
      tags:
      - v3/public
  /v3/articles/wiki/{id}:
    delete:
      operationId: DeleteArticlesFromWikiV3
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: user_id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - explode: false
        in: header
        name: admin
        required: true
        schema:
          type: boolean
        style: simple
      responses:
        "200":
          description: Articles Successfully Deleted
        "400":
          description: "Bad Request, invalid Wiki ID format. "
        "403":
          description: Forbidden
        "404":
          description: Articles Not Found
      summary: Delete Articles from Wiki
      tags:
      - v3/internal
      x-internal: false
components:
  schemas:
    ArticleV1:
      description: Article of a Wiki
      example:
        versions:
        - author:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          modification_date: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
        - author:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          modification_date: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
        author:
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        rating: 0.08008281904610115
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        creation_date: 2000-01-23T04:56:07.000+00:00
        title: title
        wiki_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tags:
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tag: tag
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tag: tag
      properties:
        id:
          description: The ID of the article
          format: uuid
          title: id
          type: string
        wiki_id:
          description: The ID corresponding to the wiki the article belongs to.
          format: uuid
          title: wiki_id
          type: string
        title:
          description: The title of the article. The same as the title of the most
            recent version.
          title: title
          type: string
        creation_date:
          description: The date of creation of the article.
          format: date-time
          title: creation_date
          type: string
        author:
          $ref: '#/components/schemas/AuthorV1'
        tags:
          description: Array of the tags of the article. The same as the array of
            tags of the most recent version.
          items:
            $ref: '#/components/schemas/TagV1'
          title: tags
          type: array
        versions:
          description: Array of simplified articleversions
          items:
            $ref: '#/components/schemas/SimplifiedArticleVersionV1'
          title: versions
          type: array
        rating:
          description: Average rating of the Article
          format: double
          minimum: 0
          title: rating
          type: number
          x-stoplight:
            id: 102q2hlty1t4n
      required:
      - author
      - creation_date
      - id
      - rating
      - tags
      - title
      - versions
      - wiki_id
      title: ArticleV1
      type: object
      x-examples:
        Example 1:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          wiki_id: 9a3179cd-aa83-4a5b-a08a-5c794d4020a8
          title: string
          creation_date: 2019-08-24T14:15:22Z
          author:
            id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            name: string
          tags:
          - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            tag: string
          versions:
          - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            title: string
            author:
              id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
              name: string
            modification_date: 2019-08-24T14:15:22Z
          rating: 0
    ArticleVersionV1:
      description: 'Concrete version of an Article object '
      example:
        article_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        author:
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        modification_date: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
        body: body
        tags:
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tag: tag
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tag: tag
      properties:
        id:
          description: The ID of the version of the article.
          format: uuid
          title: id
          type: string
        article_id:
          description: The ID of the article.
          format: uuid
          title: article_id
          type: string
        author:
          $ref: '#/components/schemas/AuthorV1'
        title:
          description: The title of the version of the article.
          title: title
          type: string
        modification_date:
          description: The date of modification the article that created the version.
          format: date-time
          title: modification_date
          type: string
        body:
          description: The body of the version.
          title: body
          type: string
        tags:
          description: Array of the tags of the version of the article.
          items:
            $ref: '#/components/schemas/TagV1'
          title: tags
          type: array
      required:
      - article_id
      - author
      - body
      - id
      - modification_date
      - tags
      - title
      title: ArticleVersionV1
      type: object
      x-examples:
        Example 1:
          id: 672271b95150a9cd3f465999
          article_id: 672271d05150a9cd3f46599a
          body: wikiText_body
          editors:
          - id: 672272475150a9cd3f46599c
            name: user_name
            edition_date: 2024-01-01T00:00:00.000Z
          modification_date: 2024-01-01T00:00:00.000Z
          tags:
          - id: 672271fe5150a9cd3f46599b
            tag: tag
          title: article_version_title
    SimplifiedArticleVersionV1:
      description: Simplification of an ArticleVersion object
      example:
        author:
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        modification_date: 2000-01-23T04:56:07.000+00:00
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
      properties:
        id:
          description: The ID of the article version.
          format: uuid
          title: id
          type: string
        title:
          description: The title of the article version.
          title: title
          type: string
        author:
          $ref: '#/components/schemas/AuthorV1'
        modification_date:
          description: The date of modification of the article version.
          format: date-time
          title: modification_date
          type: string
      required:
      - id
      - modification_date
      - title
      title: SimplifiedArticleVersionV1
      type: object
      x-examples:
        Example 1:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          title: string
          author:
            id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            name: string
          modification_date: 2019-08-24T14:15:22Z
    TagV1:
      description: Keywords for identifying articles
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tag: tag
      properties:
        id:
          description: The name of the tag.
          format: uuid
          title: id
          type: string
        tag:
          description: The name of the tag.
          title: tag
          type: string
          x-stoplight:
            id: 28n4e2xedche5
      required:
      - id
      - tag
      title: Tag
      type: object
      x-examples:
        Example 1:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          tag: string
    ArticleListV1:
      description: List of Articles. Supports pagination.
      example:
        next: https://openapi-generator.tech
        total: 0
        offset: 6
        previous: https://openapi-generator.tech
        limit: 0
        articles:
        - versions:
          - author:
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            modification_date: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            title: title
          - author:
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            modification_date: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            title: title
          author:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          rating: 0.08008281904610115
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          creation_date: 2000-01-23T04:56:07.000+00:00
          title: title
          wiki_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tags:
          - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tag: tag
          - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tag: tag
        - versions:
          - author:
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            modification_date: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            title: title
          - author:
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            modification_date: 2000-01-23T04:56:07.000+00:00
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            title: title
          author:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          rating: 0.08008281904610115
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          creation_date: 2000-01-23T04:56:07.000+00:00
          title: title
          wiki_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tags:
          - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tag: tag
          - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tag: tag
      properties:
        articles:
          items:
            $ref: '#/components/schemas/ArticleV1'
          title: articles
          type: array
          x-stoplight:
            id: qmckelb8p9agh
        total:
          description: The total number of items available to return.
          title: total
          type: integer
          x-stoplight:
            id: ceyp9h3u6pq3t
        offset:
          description: The offset of the items returned (as set in the query or by
            default)
          title: offset
          type: integer
          x-stoplight:
            id: y8f5uy4secbdp
        limit:
          description: The maximum number of items in the response (as set in the
            query or by default).
          example: 0
          minimum: 0
          title: limit
          type: integer
          x-stoplight:
            id: mli08w7p9m5ct
        previous:
          description: Request to the previous page of items. ( null if none)
          format: uri
          nullable: true
          title: previous
          type: string
          x-stoplight:
            id: fr352m14ihvc7
        next:
          description: 'Request to the next page of items. ( null if none) '
          format: uri
          nullable: true
          title: next
          type: string
          x-stoplight:
            id: d6rwzi2d4o45u
      required:
      - articles
      - limit
      - next
      - offset
      - previous
      - total
      title: ArticleListV1
      type: object
      x-examples:
        Example 1:
          articles:
          - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            wiki_id: 9a3179cd-aa83-4a5b-a08a-5c794d4020a8
            title: string
            creation_date: 2019-08-24T14:15:22Z
            author:
              id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
              name: string
            tags:
            - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
              tag: string
            versions:
            - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
              title: string
              author:
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                name: string
              modification_date: 2019-08-24T14:15:22Z
            rating: 0
          total: 0
          offset: 0
          limit: 0
          previous: http://example.com
          next: http://example.com
    ArticleVersionListV1:
      description: List of ArticleVersions. Supports pagination.
      example:
        next: https://openapi-generator.tech
        total: 0
        offset: 6
        previous: https://openapi-generator.tech
        article_versions:
        - author:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          modification_date: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
        - author:
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          modification_date: 2000-01-23T04:56:07.000+00:00
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title: title
        limit: 1
      properties:
        article_versions:
          items:
            $ref: '#/components/schemas/SimplifiedArticleVersionV1'
          title: article_versions
          type: array
          x-stoplight:
            id: dytirb2nopmcp
        total:
          description: The total number of items available to return.
          title: total
          type: integer
          x-stoplight:
            id: nyqo2igxm0plp
        offset:
          description: The offset of the items returned (as set in the query or by
            default)
          title: offset
          type: integer
          x-stoplight:
            id: cy8nldi2is9br
        limit:
          description: The maximum number of items in the response (as set in the
            query or by default).
          title: limit
          type: integer
          x-stoplight:
            id: p51ex5e7pdmzw
        previous:
          description: Request to the next page of items. ( null if none)
          format: uri
          nullable: true
          title: previous
          type: string
          x-stoplight:
            id: tlbg5auyullr7
        next:
          description: 'Request to the next page of items. ( null if none) '
          format: uri
          nullable: true
          title: next
          type: string
          x-stoplight:
            id: rc3t7xs8w8yr3
      required:
      - article_versions
      - limit
      - next
      - offset
      - previous
      - total
      title: ArticleVersionListV1
      type: object
      x-examples:
        Example 1:
          article_versions:
          - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            title: string
            author:
              id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
              name: string
            modification_date: string
          total: 0
          offset: 0
          limit: 0
          previous: http://example.com
          next: http://example.com
    NewArticleVersionV1:
      description: Data required to the user to create a new ArticleVersion of an
        Article (given in the path of the endpoint)
      example:
        author:
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
        body: body
        tags:
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tag: tag
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tag: tag
      properties:
        title:
          description: The title of the version of the article.
          title: title
          type: string
          x-stoplight:
            id: 3ec4vruerwwxz
        author:
          $ref: '#/components/schemas/AuthorV1'
        tags:
          items:
            $ref: '#/components/schemas/TagV1'
          title: tags
          type: array
          x-stoplight:
            id: gn4btncpluv0e
        body:
          description: The body of the version.
          title: body
          type: string
          x-stoplight:
            id: sdqsmbl8khsan
      required:
      - author
      - body
      - tags
      - title
      title: NewArticleVersionV1
      type: object
      x-examples:
        Example 1:
          title: string
          author:
            id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            name: string
          tags:
          - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            tag: string
          body: string
    AuthorV1:
      description: The author of an Article or ArticleVersion.
      example:
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          description: The ID of the author.
          format: uuid
          title: id
          type: string
        name:
          description: The name of the author.
          title: name
          type: string
      required:
      - id
      - name
      title: AuthorV1
      type: object
      x-examples:
        Example 1:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          name: string
    NewArticleV1:
      description: Data required to the user to create a new Article and its first
        version
      example:
        author:
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title: title
        body: body
        wiki_id: wiki_id
        tags:
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tag: tag
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tag: tag
      properties:
        title:
          description: The title of the version of the article.
          title: title
          type: string
          x-stoplight:
            id: 3ec4vruerwwxz
        author:
          $ref: '#/components/schemas/AuthorV1'
        tags:
          items:
            $ref: '#/components/schemas/TagV1'
          title: tags
          type: array
          x-stoplight:
            id: gn4btncpluv0e
        body:
          description: The body of the version.
          title: body
          type: string
          x-stoplight:
            id: sdqsmbl8khsan
        wiki_id:
          description: The ID of the Wiki where the Article is created.
          title: wiki_id
          type: string
          x-stoplight:
            id: sdqsmbl8khsan
      required:
      - author
      - tags
      - title
      - wiki_id
      title: NewArticle
      type: object
      x-examples:
        Example 1:
          title: string
          author:
            id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            name: string
          tags:
          - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            tag: string
          body: string
          wiki_id: string
    id_ratings_bodyV1:
      properties:
        rating:
          description: 'Average rating of the article '
          example: 4.5
          format: double
          maximum: 5
          minimum: 0
          title: rating
          type: number
          x-stoplight:
            id: e861y8ux0w86b
      required:
      - rating
      title: id_ratings_bodyV1
      type: object
    id_tags_bodyV1:
      properties:
        tag_ids:
          description: List of Tag IDs
          items:
            $ref: '#/components/schemas/TagV1'
          title: tag_ids
          type: array
          x-stoplight:
            id: w0pyzqdbvcjuk
      required:
      - tag_ids
      title: id_tags_bodyV1
      type: object
    ArticleV2:
      description: Article of a Wiki
      example:
        versions:
        - author:
            image: https://openapi-generator.tech
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          modification_date: 2000-01-23T04:56:07.000+00:00
          lan: lan
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title:
            key: title
        - author:
            image: https://openapi-generator.tech
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          modification_date: 2000-01-23T04:56:07.000+00:00
          lan: lan
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title:
            key: title
        author:
          image: https://openapi-generator.tech
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        rating: 0.08008281904610115
        lan: lan
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        creation_date: 2000-01-23T04:56:07.000+00:00
        title:
          key: title
        wiki_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tags:
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tag:
            key: tag
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tag:
            key: tag
      properties:
        id:
          description: The ID of the article
          format: uuid
          title: id
          type: string
        wiki_id:
          description: The ID corresponding to the wiki the article belongs to.
          format: uuid
          title: wiki_id
          type: string
        title:
          additionalProperties:
            type: string
            x-stoplight:
              id: tuicihxn740u5
          description: Dictionary of the title of the version of the article in the
            different supported languages. The same as the title of the most recent
            version.
          title: title
          type: object
        creation_date:
          description: The date of creation of the article.
          format: date-time
          title: creation_date
          type: string
        author:
          $ref: '#/components/schemas/AuthorV2'
        tags:
          description: Array of the tags of the article. The same as the array of
            tags of the most recent version.
          items:
            $ref: '#/components/schemas/TagV2'
          title: tags
          type: array
        versions:
          description: Array of simplified articleversions
          items:
            $ref: '#/components/schemas/SimplifiedArticleVersionV2'
          title: versions
          type: array
        rating:
          description: Average rating of the Article
          format: double
          minimum: 0
          title: rating
          type: number
          x-stoplight:
            id: 102q2hlty1t4n
        lan:
          description: Original language of the Article
          title: lan
          type: string
          x-stoplight:
            id: 08dmmixrlawd4
      required:
      - author
      - creation_date
      - id
      - lan
      - rating
      - tags
      - title
      - versions
      - wiki_id
      title: ArticleV2
      type: object
      x-examples:
        Example 1:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          wiki_id: 9a3179cd-aa83-4a5b-a08a-5c794d4020a8
          title:
            property1: string
            property2: string
          creation_date: 2019-08-24T14:15:22Z
          author:
            id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            name: string
            image: http://example.com
          tags:
          - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            tag:
              property1: string
              property2: string
          versions:
          - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            title:
              property1: string
              property2: string
            author:
              id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
              name: string
              image: http://example.com
            modification_date: 2019-08-24T14:15:22Z
            lan: string
          rating: 0
          lan: string
    ArticleVersionV2:
      description: 'Concrete version of an Article object '
      example:
        article_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        author:
          image: https://openapi-generator.tech
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        modification_date: 2000-01-23T04:56:07.000+00:00
        lan: lan
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title:
          key: title
        body: body
        tags:
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tag:
            key: tag
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tag:
            key: tag
      properties:
        id:
          description: The ID of the version of the article.
          format: uuid
          title: id
          type: string
        article_id:
          description: The ID of the article.
          format: uuid
          title: article_id
          type: string
        author:
          $ref: '#/components/schemas/AuthorV2'
        title:
          additionalProperties:
            type: string
            x-stoplight:
              id: gdam73pkwpvxp
          description: Dictionary of the title of the version of the article in the
            different supported languages.
          title: title
          type: object
        modification_date:
          description: The date of modification the article that created the version.
          format: date-time
          title: modification_date
          type: string
        body:
          description: The body of the version.
          title: body
          type: string
        tags:
          description: Array of the tags of the version of the article.
          items:
            $ref: '#/components/schemas/TagV2'
          title: tags
          type: array
        lan:
          description: Original language of the ArticleVersion
          title: lan
          type: string
          x-stoplight:
            id: 4q7rih86ockg4
      required:
      - article_id
      - author
      - body
      - id
      - lan
      - modification_date
      - tags
      - title
      title: ArticleVersionV2
      type: object
      x-examples:
        Example 2:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          article_id: e4aad634-3311-4e79-b165-3911549b3b29
          author:
            id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            name: string
            image: http://example.com
          title:
            property1: string
            property2: string
          modification_date: 2019-08-24T14:15:22Z
          body: string
          tags:
          - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            tag:
              property1: string
              property2: string
          lan: string
    SimplifiedArticleVersionV2:
      description: Simplification of an ArticleVersion object
      example:
        author:
          image: https://openapi-generator.tech
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        modification_date: 2000-01-23T04:56:07.000+00:00
        lan: lan
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        title:
          key: title
      properties:
        id:
          description: The ID of the article version.
          format: uuid
          title: id
          type: string
        title:
          additionalProperties:
            type: string
            x-stoplight:
              id: txndikiet9kii
          description: Dictionary of the title of the version of the article in the
            different supported languages.
          title: title
          type: object
        author:
          $ref: '#/components/schemas/AuthorV2'
        modification_date:
          description: The date of modification of the article version.
          format: date-time
          title: modification_date
          type: string
        lan:
          description: Original language of the ArticleVersion
          title: lan
          type: string
          x-stoplight:
            id: l2iy9pb5pe9xh
      required:
      - author
      - id
      - lan
      - modification_date
      - title
      title: SimplifiedArticleVersionV2
      type: object
      x-examples:
        Example 1:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          title:
            property1: string
            property2: string
          author:
            id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            name: string
            image: http://example.com
          modification_date: 2019-08-24T14:15:22Z
          lan: string
    TagV2:
      description: Keywords for identifying articles
      example:
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        tag:
          key: tag
      properties:
        id:
          description: The name of the tag.
          format: uuid
          title: id
          type: string
        tag:
          additionalProperties:
            type: string
            x-stoplight:
              id: wu2il8qpp7cz6
          description: The traductions of the tag.
          title: tag
          type: object
          x-stoplight:
            id: 28n4e2xedche5
      required:
      - id
      - tag
      title: Tag
      type: object
      x-examples:
        Example 1:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          tag:
            property1: string
            property2: string
    ArticleListV2:
      description: List of Articles. Supports pagination.
      example:
        next: https://openapi-generator.tech
        total: 0
        offset: 6
        previous: https://openapi-generator.tech
        limit: 0
        articles:
        - versions:
          - author:
              image: https://openapi-generator.tech
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            modification_date: 2000-01-23T04:56:07.000+00:00
            lan: lan
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            title:
              key: title
          - author:
              image: https://openapi-generator.tech
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            modification_date: 2000-01-23T04:56:07.000+00:00
            lan: lan
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            title:
              key: title
          author:
            image: https://openapi-generator.tech
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          rating: 0.08008281904610115
          lan: lan
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          creation_date: 2000-01-23T04:56:07.000+00:00
          title:
            key: title
          wiki_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tags:
          - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tag:
              key: tag
          - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tag:
              key: tag
        - versions:
          - author:
              image: https://openapi-generator.tech
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            modification_date: 2000-01-23T04:56:07.000+00:00
            lan: lan
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            title:
              key: title
          - author:
              image: https://openapi-generator.tech
              name: name
              id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            modification_date: 2000-01-23T04:56:07.000+00:00
            lan: lan
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            title:
              key: title
          author:
            image: https://openapi-generator.tech
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          rating: 0.08008281904610115
          lan: lan
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          creation_date: 2000-01-23T04:56:07.000+00:00
          title:
            key: title
          wiki_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tags:
          - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tag:
              key: tag
          - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
            tag:
              key: tag
      properties:
        articles:
          items:
            $ref: '#/components/schemas/ArticleV2'
          title: articles
          type: array
          x-stoplight:
            id: qmckelb8p9agh
        total:
          description: The total number of items available to return.
          title: total
          type: integer
          x-stoplight:
            id: ceyp9h3u6pq3t
        offset:
          description: The offset of the items returned (as set in the query or by
            default)
          title: offset
          type: integer
          x-stoplight:
            id: y8f5uy4secbdp
        limit:
          description: The maximum number of items in the response (as set in the
            query or by default).
          example: 0
          minimum: 0
          title: limit
          type: integer
          x-stoplight:
            id: mli08w7p9m5ct
        previous:
          description: Request to the previous page of items. ( null if none)
          format: uri
          nullable: true
          title: previous
          type: string
          x-stoplight:
            id: fr352m14ihvc7
        next:
          description: 'Request to the next page of items. ( null if none) '
          format: uri
          nullable: true
          title: next
          type: string
          x-stoplight:
            id: d6rwzi2d4o45u
      required:
      - articles
      - limit
      - next
      - offset
      - previous
      - total
      title: ArticleListV2
      type: object
      x-examples:
        Example 2:
          articles:
          - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            wiki_id: 9a3179cd-aa83-4a5b-a08a-5c794d4020a8
            title:
              property1: string
              property2: string
            creation_date: 2019-08-24T14:15:22Z
            author:
              id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
              name: string
              image: http://example.com
            tags:
            - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
              tag:
                property1: string
                property2: string
            versions:
            - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
              title:
                property1: string
                property2: string
              author:
                id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
                name: string
                image: http://example.com
              modification_date: 2019-08-24T14:15:22Z
              lan: string
            rating: 0
            lan: string
          total: 0
          offset: 0
          limit: 0
          previous: http://example.com
          next: http://example.com
    ArticleVersionListV2:
      description: List of ArticleVersions. Supports pagination.
      example:
        next: https://openapi-generator.tech
        total: 0
        offset: 6
        previous: https://openapi-generator.tech
        article_versions:
        - author:
            image: https://openapi-generator.tech
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          modification_date: 2000-01-23T04:56:07.000+00:00
          lan: lan
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title:
            key: title
        - author:
            image: https://openapi-generator.tech
            name: name
            id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          modification_date: 2000-01-23T04:56:07.000+00:00
          lan: lan
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          title:
            key: title
        limit: 1
      properties:
        article_versions:
          items:
            $ref: '#/components/schemas/SimplifiedArticleVersionV2'
          title: article_versions
          type: array
          x-stoplight:
            id: dytirb2nopmcp
        total:
          description: The total number of items available to return.
          title: total
          type: integer
          x-stoplight:
            id: nyqo2igxm0plp
        offset:
          description: The offset of the items returned (as set in the query or by
            default)
          title: offset
          type: integer
          x-stoplight:
            id: cy8nldi2is9br
        limit:
          description: The maximum number of items in the response (as set in the
            query or by default).
          title: limit
          type: integer
          x-stoplight:
            id: p51ex5e7pdmzw
        previous:
          description: Request to the next page of items. ( null if none)
          format: uri
          nullable: true
          title: previous
          type: string
          x-stoplight:
            id: tlbg5auyullr7
        next:
          description: 'Request to the next page of items. ( null if none) '
          format: uri
          nullable: true
          title: next
          type: string
          x-stoplight:
            id: rc3t7xs8w8yr3
      required:
      - article_versions
      - limit
      - next
      - offset
      - previous
      - total
      title: ArticleVersionListV2
      type: object
      x-examples:
        Example 2:
          article_versions:
          - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            title:
              property1: string
              property2: string
            author:
              id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
              name: string
              image: http://example.com
            modification_date: 2019-08-24T14:15:22Z
            lan: string
          total: 0
          offset: 0
          limit: 0
          previous: http://example.com
          next: http://example.com
    NewArticleVersionV2:
      description: Data required to the user to create a new ArticleVersion of an
        Article (given in the path of the endpoint)
      example:
        author:
          image: https://openapi-generator.tech
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lan: lan
        translate_title: true
        title: title
        body: body
        tags:
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tag:
            key: tag
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tag:
            key: tag
      properties:
        title:
          description: The title of the version of the article.
          title: title
          type: string
          x-stoplight:
            id: 3ec4vruerwwxz
        author:
          $ref: '#/components/schemas/AuthorV2'
        tags:
          items:
            $ref: '#/components/schemas/TagV2'
          title: tags
          type: array
          x-stoplight:
            id: gn4btncpluv0e
        body:
          description: The body of the version.
          title: body
          type: string
          x-stoplight:
            id: sdqsmbl8khsan
        lan:
          description: Original language of the ArticleVersion
          title: lan
          type: string
          x-stoplight:
            id: w1699vlft1zfv
        translate_title:
          default: true
          description: Indicates if the title of the ArticleVersion should be translated
            in the different translations of the Article
          title: translate_title
          type: boolean
          x-stoplight:
            id: qpn3ctbm62gek
      required:
      - author
      - body
      - lan
      - tags
      - title
      - translate_title
      title: NewArticleVersionV2
      type: object
      x-examples:
        Example 1:
          title: string
          author:
            id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            name: string
            image: http://example.com
          tags:
          - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            tag:
              property1: string
              property2: string
          body: string
          lan: string
          translate_title: true
    AuthorV2:
      description: The author of an Article or ArticleVersion.
      example:
        image: https://openapi-generator.tech
        name: name
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
      properties:
        id:
          description: The ID of the author.
          format: uuid
          title: id
          type: string
        name:
          description: The name of the author.
          title: name
          type: string
        image:
          description: PFP of the author
          format: uri
          title: image
          type: string
          x-stoplight:
            id: 4fwdxuojiyz6e
      required:
      - id
      - image
      - name
      title: AuthorV2
      type: object
      x-examples:
        Example 2:
          id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
          name: string
          image: http://example.com
    NewArticleV2:
      description: Data required to the user to create a new Article and its first
        version
      example:
        trasnlate_title: true
        author:
          image: https://openapi-generator.tech
          name: name
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        lan: lan
        title: title
        body: body
        wiki_id: wiki_id
        tags:
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tag:
            key: tag
        - id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          tag:
            key: tag
      properties:
        title:
          description: The title of the version of the article.
          title: title
          type: string
          x-stoplight:
            id: 3ec4vruerwwxz
        author:
          $ref: '#/components/schemas/AuthorV2'
        tags:
          items:
            $ref: '#/components/schemas/TagV2'
          title: tags
          type: array
          x-stoplight:
            id: gn4btncpluv0e
        body:
          description: The body of the version.
          title: body
          type: string
          x-stoplight:
            id: sdqsmbl8khsan
        wiki_id:
          description: The ID of the Wiki where the Article is created.
          title: wiki_id
          type: string
          x-stoplight:
            id: sdqsmbl8khsan
        lan:
          description: Original language of the first ArticleVersion of the Article
          title: lan
          type: string
          x-stoplight:
            id: 5wqtaanmqegme
        trasnlate_title:
          default: true
          description: Indicates if the title of the ArticleVersion of the Artivle
            should be translated in the different translations of the ArticleVersion
          title: trasnlate_title
          type: boolean
          x-stoplight:
            id: 2jvszjhf1etrp
      required:
      - author
      - lan
      - tags
      - title
      - trasnlate_title
      - wiki_id
      title: NewArticle
      type: object
      x-examples:
        Example 2:
          title: string
          author:
            id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            name: string
            image: http://example.com
          tags:
          - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            tag:
              property1: string
              property2: string
          body: string
          wiki_id: string
          lan: string
          trasnlate_title: true
    id_ratings_bodyV2:
      properties:
        rating:
          description: 'Average rating of the article '
          example: 4.5
          format: double
          maximum: 5
          minimum: 0
          title: rating
          type: number
          x-stoplight:
            id: e861y8ux0w86b
      required:
      - rating
      title: id_ratings_bodyV2
      type: object
      x-examples:
        Example 1:
          rating: 4.5
    id_tags_bodyV2:
      properties:
        tag_ids:
          description: List of Tag IDs
          items:
            $ref: '#/components/schemas/TagV2'
          title: tag_ids
          type: array
          x-stoplight:
            id: w0pyzqdbvcjuk
      required:
      - tag_ids
      title: id_tags_bodyV2
      type: object
      x-examples:
        Example 2:
          tag_ids:
          - id: 497f6eca-6276-4993-bfeb-53cbbbba6f08
            tag:
              property1: string
              property2: string
    inline_response_200_V2:
      example:
        body: body
      properties:
        body:
          title: body
          type: string
          x-stoplight:
            id: i3lbzx86wf1aw
      title: inline_response_200_V2
      type: object
      x-examples:
        Example 1:
          body: string
  securitySchemes: {}
